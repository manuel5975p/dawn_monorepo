#include <metal_stdlib>
using namespace metal;

struct buf0 {
  /* 0x0000 */ float4 r;
};

struct tint_module_vars_struct {
  const constant buf0* x_7;
  thread float4* x_GLF_color;
};

struct main_out {
  float4 x_GLF_color_1;
};

struct main_outputs {
  float4 main_out_x_GLF_color_1 [[color(0)]];
};

void main_1(tint_module_vars_struct tint_module_vars) {
  float f = 0.0f;
  float4 v = 0.0f;
  f = 1.0f;
  v = float4(sin(f), cos(f), exp2(f), log(f));
  if ((distance(v, (*tint_module_vars.x_7).r) < 0.10000000149011611938f)) {
    (*tint_module_vars.x_GLF_color) = float4(1.0f, 0.0f, 0.0f, 1.0f);
  } else {
    (*tint_module_vars.x_GLF_color) = float4(0.0f);
  }
}

main_out main_inner(tint_module_vars_struct tint_module_vars) {
  main_1(tint_module_vars);
  return main_out{.x_GLF_color_1=(*tint_module_vars.x_GLF_color)};
}

fragment main_outputs v_1(const constant buf0* x_7 [[buffer(0)]]) {
  thread float4 x_GLF_color = 0.0f;
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.x_7=x_7, .x_GLF_color=(&x_GLF_color)};
  main_outputs tint_wrapper_result = {};
  tint_wrapper_result.main_out_x_GLF_color_1 = main_inner(tint_module_vars).x_GLF_color_1;
  return tint_wrapper_result;
}
